Виктория Рыжкович (ITBird)

Название приложения: Carsharing

Информацию по разработке можно увидеть в git.


Требования для backend:
1. JDK 1.8.0
2. MySQL (для разработки использовала версию 5.7)
3. Maven 3.5.4 (установить с https://maven.apache.org/download.cgi, после установки в командной строке Windows должна быть доступна команда "mvn")

Требования для frontend:
1. Node.js 8.11 (после установки в командной строке Windows должна быть доступна команда "npm")
2. npm install @angular/cli@5.6.0 -g (angular/cli нужно устанавливать глобально, чтобы из командной строки Windows была доступна команда "ng")

!!!ВНИМАНИЕ!!!
в конфигурационный файл MySQL добавить в секцию [mysqld]:
character-set-server=cp1251

Это нужно для того, чтобы MySQL сервер корректно записывал в таблицы русский текст (используется в тестовых данных при первом запуске приложения Carsharing, в выпадающих списках и др.)


----------------------------------------
ПРЕДВАРИТЕЛЬНАЯ НАСТРОЙКА
----------------------------------------

1. Открыть файл backend\src\main\resources\application.properties и заполнить в нем 2 параметра:
spring.datasource.username=<здесь имя пользователя для подключения к MySQL>
spring.datasource.password=<здесь пароль пользователя для подключения к MySQL>

2. При первом запуске приложения Carsharing с помощью liquibase будут автоматически создаваться: БД CarSharing_ITBird, таблицы, структура таблиц. 
Кроме этого база наполнится некоторыми тестовыми данными:
-будет создано 3 пользователя:
--admin@mail.ru - пароль "1": предполагаемый администратор системы, тестовые данные настроены таким образом, что у админа будут висеть некоторые объявления или брони, которые он должен активировать или отклонить;
--user1@mail.ru - пароль "1", предполагаемый арендодатель системы, им будет создано 12 объявлений об аренде авто и они будут в различных состояниях (на активации, отклонены админом, ожидают подтверждения оплаты и т.д.);
--user2@mail.ru - пароль "1", предполагаемый арендатор системы, им будет создано 12 броней на каждое авто арендатора и они будут в различных состояниях (на активации, отклонены админом, отменены, требующие оплаты и т.д.);
-будет создано 5 оплат после использования авто по брони;
-будут заполнены фото для авто и пользователей.

!!!ВНИМАНИЕ!!!
EMail указанных пользователей желательно поменять на существующие почтовые ящики, чтобы отслеживать получение электронных писем.
Файл с пользователями лежит здесь:
backend\src\main\resources\liquibase\init_data\user.csv


------------------------------------------
СБОРКА И ЗАПУСК ПРИЛОЖЕНИЯ
------------------------------------------

Для сборки frontend:
1. перейти в каталог ./frontend
2. запустить BUILD.bat

!!!ВНИМАНИЕ!!! 
Frontend уже собран и выложен в папку backend\src\main\resources\static
Т.е. frontend можно не билдить, но если надо заново сбилдить, то это может занять некоторое время, т.к. будут вытягиваться зависимости в node_modules


Для сборки и запуска backend:
1. перейти в каталог ./backend
2. запустить RUN_SERVER.bat
3. дождаться, когда сервер полностью запустится (пока не появится надпись Started CarsharingJavaAngularApplication in ... sec)

4. Для работы с приложением Carsharing перейти в браузере по адресу:
http://localhost:8080

5. Для получения документации по API перейти в браузере по адресу:
http://localhost:8080/swagger-ui.html